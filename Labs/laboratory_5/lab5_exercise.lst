     1                                  
     2                                      ; Two character strings S1 and S2 are given. Obtain the string D by concatenating the elements found on odd positions in S2 and the elements found on even positions in S1.
     3                                      ; Example:
     4                                      ; S1: 'a', 'b', 'c', 'b', 'e', 'f'
     5                                      ; S2: '1', '2', '3', '4', '5'
     6                                      ; D: '1', '3', '5', 'b', 'b', 'f'
     7                                  
     8                                  bits 32
     9                                  global  start 
    10                                  extern  exit
    11                                  import  exit msvcrt.dll
    12                                  segment  data use32 class=data
    13 00000000 616263646566                s1 db 'a','b','c','d','e','f' ; the string of bytes s1
    14                                      l equ $-s1 ; compute the length of the string in s1
    15 00000006 3132333435                  s2 db '1', '2', '3', '4', '5' ; the string of bytes s2
    16                                      p equ $-s2 ; compute the length of the string in s2
    17 0000000B 00<rept>                    D times l db 0 ; reserve s1 bytes for the destination string and initialise it
    18                                  
    19                                  segment  code use32 class=code ; code segment
    20                                  start:
    21 00000000 B905000000                  mov ECX, p ; we put the length of s2 in ECX in order to make the loop
    22 00000005 BE00000000                  mov ESI, 0
    23 0000000A BA00000000                  mov EDX, 0
    24 0000000F E316                        jecxz Ending1
    25                                      RepetaS2:
    26 00000011 F7C601000000                    test ESI, 1
    27 00000017 750D                            jnz notOdd
    28 00000019 8A86[06000000]                  mov AL, [s2+ESI]
    29 0000001F 8882[0B000000]                  mov [D+EDX], AL
    30 00000025 42                              inc EDX
    31                                          notOdd:
    32 00000026 46                              inc ESI
    33                                      Ending1: ; the end of the first loop
    34 00000027 E2E8                        loop RepetaS2
    35                                     
    36 00000029 B906000000                  mov ECX, l ; we put the length of s1 in ECX in order to make the loop
    37 0000002E BE00000000                  mov ESI, 0
    38 00000033 E318                        jecxz Ending2
    39                                      RepetaS1:
    40 00000035 F7C601000000                    test ESI, 1
    41 0000003B 740D                            jz notEven
    42 0000003D 8A86[00000000]                  mov AL, [s1+ESI]
    43 00000043 8882[0B000000]                  mov [D+EDX], AL
    44 00000049 42                              inc EDX
    45                                          notEven:
    46 0000004A 46                              inc ESI
    47 0000004B E2E8                        loop RepetaS1
    48                                      Ending2: ;the end of the second loop
    49 0000004D 6A00                        push dword 0
    50 0000004F FF15[00000000]              call [exit]
